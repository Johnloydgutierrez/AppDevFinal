{"ast":null,"code":"import categ from '@/components/categ.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    categ\n  },\n  data() {\n    return {\n      ebikelist: [] // Corrected property productName\n    };\n  },\n\n  created() {\n    this.getInfo();\n  },\n  methods: {\n    async getInfo() {\n      try {\n        const inf = await axios.get('/ebikecategGetData');\n        this.ebikelist = inf.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    editItem(selectedInfo) {\n      // Access the form component using the ref\n      const formComponent = this.$refs.insertForm;\n\n      // Update the form fields with the selected item's data\n\n      formComponent.id = selectedInfo.ID;\n      formComponent.sid = selectedInfo.ID;\n      formComponent.productName = selectedInfo.productName;\n      formComponent.category = selectedInfo.category;\n      formComponent.categImage = selectedInfo.categImage;\n      formComponent.price = selectedInfo.price;\n\n      // Store the selected item's ID for updating it later\n      formComponent.itemId = selectedInfo.id;\n      formComponent.isEditing = true;\n    },\n    generatePDF() {\n      // Your existing code for generating PDF\n    },\n    async updateItem(editedItem) {\n      try {\n        // Make a PUT request to update the item in your database\n        await axios.put(`updateItem/${editedItem.id}`, editedItem);\n\n        // Update the local data with the edited item\n        const index = this.info.findIndex(item => item.id === editedItem.id);\n        this.$set(this.info, index, editedItem);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["categ","axios","components","data","ebikelist","created","getInfo","methods","inf","get","error","console","editItem","selectedInfo","formComponent","$refs","insertForm","id","ID","sid","productName","category","categImage","price","itemId","isEditing","generatePDF","updateItem","editedItem","put","index","info","findIndex","item","$set"],"sources":["D:\\laragon\\www\\AppDevFinal\\src\\views\\ListEbike.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <div class=\"container\">\r\n      <router-link to=\"/Nhome\" class=\"navbar-brand\">Back</router-link>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n          \r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  <table border=\"1\" class=\"parts-table\">\r\n  <tr>\r\n    <th>Model</th>\r\n    <th>Description</th>\r\n    <th>Category</th>\r\n    <th>Quantity</th>\r\n    <th>CategImage</th>\r\n    \r\n    \r\n    <th>price</th>\r\n    \r\n    <th style=\"display: none\">ID</th>\r\n  </tr>\r\n  <tr v-for=\"info in ebikelist\" :key=\"info.id\">\r\n    <td>{{ info.productName }}</td>\r\n    <td>{{ info.description }}</td>\r\n    <td>{{ info.category }}</td>\r\n    <td>{{ info.quantity }}</td>\r\n    \r\n    <td v-if=\"info.categImage\">\r\n      <img\r\n        :src=\"info.categImage\"\r\n        style=\"max-width: 100%; max-height: 100%; width: 100px; height: auto;\"\r\n        @error=\"handlecategImageError\"\r\n      />\r\n    </td>\r\n    <td>{{ info.price }}</td>\r\n    <td style=\"display: none\">{{ info.id }}</td>\r\n   \r\n  </tr>\r\n</table>\r\n</template>\r\n<script>\r\nimport categ from '@/components/categ.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    categ,\r\n  },\r\n  data() {\r\n    return {\r\n    ebikelist: [], // Corrected property productName\r\n  };\r\n  },\r\n  created() {\r\n    this.getInfo();\r\n  },\r\n  methods: {\r\n    async getInfo() {\r\n      try {\r\n        const inf = await axios.get('/ebikecategGetData');\r\n        this.ebikelist = inf.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    editItem(selectedInfo) {\r\n      // Access the form component using the ref\r\n      const formComponent = this.$refs.insertForm;\r\n\r\n      // Update the form fields with the selected item's data\r\n      \r\n      formComponent.id = selectedInfo.ID;\r\n      formComponent.sid = selectedInfo.ID;\r\n      formComponent.productName = selectedInfo.productName;\r\n     \r\n      formComponent.category = selectedInfo.category;\r\n      formComponent.categImage = selectedInfo.categImage;\r\n      formComponent.price = selectedInfo.price;\r\n\r\n      // Store the selected item's ID for updating it later\r\n      formComponent.itemId = selectedInfo.id;\r\n      formComponent.isEditing = true;\r\n    },\r\n    generatePDF() {\r\n      // Your existing code for generating PDF\r\n    },\r\n    async updateItem(editedItem) {\r\n      try {\r\n        // Make a PUT request to update the item in your database\r\n        await axios.put(`updateItem/${editedItem.id}`, editedItem);\r\n\r\n        // Update the local data with the edited item\r\n        const index = this.info.findIndex(item => item.id === editedItem.id);\r\n        this.$set(this.info, index, editedItem);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.floating-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center; /* Center content vertically */\r\n  width: 80%;\r\n  margin: 20px auto;\r\n  text-align: center; /* Center content horizontally */\r\n}\r\n\r\nh2 {\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.parts-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.parts-table th,\r\n.parts-table td {\r\n  border: 1px solid #535353;\r\n  padding: 12px;\r\n  text-align: center;\r\n}\r\n\r\n.parts-table th {\r\n  background-color: #4c4e4e;\r\n  color: #ffffff; /* White text color */\r\n}\r\n\r\n.parts-table tr:nth-child(even) {\r\n  background-color: #f0f0f0; /* Light gray background for even rows */\r\n}\r\n\r\n.parts-table tr:hover {\r\n  background-color: #e0e0e0; /* Slightly darker gray background on hover */\r\n}\r\n.floating-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%; /* Take full width of the parent */\r\n  max-width: 800px; /* Limit the maximum width */\r\n  margin: 20px auto;\r\n  text-align: center;\r\n}\r\n\r\n/* Add a media query for smaller screens */\r\n@media screen and (max-width: 768px) {\r\n  .floating-container {\r\n    padding: 0 10px; /* Add some padding for smaller screens */\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA+CA,OAAOA,KAAI,MAAO,wBAAwB;AAC1C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACPC,SAAS,EAAE,EAAE,CAAE;IACjB,CAAC;EACD,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,CAAC;EAChB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAME,GAAE,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,oBAAoB,CAAC;QACjD,IAAI,CAACL,SAAQ,GAAII,GAAG,CAACL,IAAI;MAC3B,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDE,QAAQA,CAACC,YAAY,EAAE;MACrB;MACA,MAAMC,aAAY,GAAI,IAAI,CAACC,KAAK,CAACC,UAAU;;MAE3C;;MAEAF,aAAa,CAACG,EAAC,GAAIJ,YAAY,CAACK,EAAE;MAClCJ,aAAa,CAACK,GAAE,GAAIN,YAAY,CAACK,EAAE;MACnCJ,aAAa,CAACM,WAAU,GAAIP,YAAY,CAACO,WAAW;MAEpDN,aAAa,CAACO,QAAO,GAAIR,YAAY,CAACQ,QAAQ;MAC9CP,aAAa,CAACQ,UAAS,GAAIT,YAAY,CAACS,UAAU;MAClDR,aAAa,CAACS,KAAI,GAAIV,YAAY,CAACU,KAAK;;MAExC;MACAT,aAAa,CAACU,MAAK,GAAIX,YAAY,CAACI,EAAE;MACtCH,aAAa,CAACW,SAAQ,GAAI,IAAI;IAChC,CAAC;IACDC,WAAWA,CAAA,EAAG;MACZ;IAAA,CACD;IACD,MAAMC,UAAUA,CAACC,UAAU,EAAE;MAC3B,IAAI;QACF;QACA,MAAM3B,KAAK,CAAC4B,GAAG,CAAE,cAAaD,UAAU,CAACX,EAAG,EAAC,EAAEW,UAAU,CAAC;;QAE1D;QACA,MAAME,KAAI,GAAI,IAAI,CAACC,IAAI,CAACC,SAAS,CAACC,IAAG,IAAKA,IAAI,CAAChB,EAAC,KAAMW,UAAU,CAACX,EAAE,CAAC;QACpE,IAAI,CAACiB,IAAI,CAAC,IAAI,CAACH,IAAI,EAAED,KAAK,EAAEF,UAAU,CAAC;MACzC,EAAE,OAAOlB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}