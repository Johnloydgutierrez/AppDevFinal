{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: '',\n      description: '',\n      brand: '',\n      model: '',\n      quantity: '',\n      partsImage: null,\n      price: '',\n      itemId: null,\n      sid: ''\n    };\n  },\n  // methods: {\n  //   handleImageChange(event) {\n  //     this.image = event.target.files[0];\n  //   },\n\n  //   async save() {\n  //   try {\n  //       const formData = this.createFormData();\n\n  //       // Save operation\n  //       const response = await axios.post('save', formData, {\n  //           headers: {\n  //               'Content-Type': 'multipart/form-data',\n  //           },\n  //       });\n\n  //       console.log(response.data);\n\n  //       // Remove the current item from the table\n  //       if (this.itemId) {\n  //           this.info = this.info.filter(item => item.id !== this.itemId);\n  //       }\n\n  //       // Reset itemId after saving changes\n  //       this.itemId = null;\n\n  //       // Reset the form fields\n  //       this.resetForm();\n  //       this.isEditing = false;\n\n  //       // Emit an event to notify the parent component about the data update\n  //       this.$emit('data-saved');\n\n  //       // ... handle other responses or actions as needed\n  //   } catch (error) {\n  //       console.error(error);\n  //   }\n\n  methods: {\n    async save() {\n      try {\n        // Generate a unique image name\n\n        // Create FormData object\n        const formData = new FormData();\n        formData.append('name', this.name);\n        formData.append('description', this.description);\n        formData.append('brand', this.brand);\n        formData.append('model', this.model);\n        formData.append('quantity', this.quantity);\n        formData.append('image', this.partsImage, this.partsImage.name);\n        formData.append('price', this.price);\n\n        // Save the room data to the database\n        const room = await axios.post(\"save\", formData);\n        console.log(\"Room saved successfully:\", room);\n\n        // Clear the form after successful submission\n        this.name = \"\";\n        this.description = \"\";\n        this.brand = \"\";\n        this.model = \"\";\n        this.quantity = \"\";\n        this.partsImage = null;\n        this.price = \"\";\n\n        // Refresh the data in the admin view\n        // this.$emit(\"refreshData\");\n      } catch (error) {\n        console.error(\"Error saving room:\", error);\n        // You can display an error message to the user\n      }\n    },\n\n    handleImageUpload(event) {\n      this.partsImage = event.target.files[0];\n    },\n    getBase64Image(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result.split(',')[1]);\n        reader.onerror = error => reject(error);\n        reader.readAsDataURL(file);\n      });\n    },\n    async updateItem() {\n      try {\n        // console.log(this.itemId);\n        const formData = this.createFormData();\n        console.log(formData);\n        // Update operation\n        const response = await axios.post(`updateItem/${this.sid}`, {\n          'name': this.name,\n          'description': this.description,\n          'brand': this.brand,\n          'model': this.model,\n          'quantity': this.quantity,\n          'image': this.image,\n          'price': this.price\n        }, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log(response.data);\n\n        // Reset the form fields\n        this.resetForm();\n        this.isEditing = false;\n\n        // Emit an event to notify the parent component about the data update\n        this.$emit('data-save');\n\n        // ... handle other responses or actions as needed\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    cancelEdit() {\n      this.resetForm();\n      this.isEditing = false;\n    },\n    editItem(info) {\n      // Clear the form fields and reset editing status\n      this.resetForm();\n      this.isEditing = false;\n    },\n    createFormData() {\n      const formData = new FormData();\n      // formData.append('id', this.id);\n      formData.append('name', this.name);\n      formData.append('description', this.description);\n      formData.append('brand', this.brand);\n      formData.append('model', this.model);\n      formData.append('quantity', this.quantity);\n      formData.append('image', this.image);\n      formData.append('price', this.price);\n      return formData;\n    },\n    resetForm() {\n      // Reset your form fields\n      this.name = '';\n      this.description = '';\n      this.brand = '';\n      this.model = '';\n      this.quantity = '';\n      this.image = null;\n      this.price = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","description","brand","model","quantity","partsImage","price","itemId","sid","methods","save","formData","FormData","append","room","post","console","log","error","handleImageUpload","event","target","files","getBase64Image","file","Promise","resolve","reject","reader","FileReader","onload","result","split","onerror","readAsDataURL","updateItem","createFormData","response","image","headers","resetForm","isEditing","$emit","cancelEdit","editItem","info"],"sources":["D:\\laragon\\www\\AppDevFinal\\src\\components\\insert.vue"],"sourcesContent":["<template>\r\n<div class=\"sidebar bg-dark-blue text-light p-4\">\r\n    <h3>Add New Product</h3>\r\n    <form @submit.prevent=\"save\">\r\n      \r\n      <div class=\"mb-3\">\r\n        <label for=\"name\" class=\"form-label\">Name</label>\r\n        <input type=\"text\" v-model=\"itemId\">\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Name\" v-model=\"name\" required>\r\n      </div>\r\n      \r\n      <div class=\"mb-3\">\r\n        \r\n        <label for=\"Description\" class=\"form-label\">Description</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Description\" v-model=\"description\" required>\r\n      </div>\r\n\r\n            \r\n      <div class=\"mb-3\">\r\n        <label for=\"Brand\" class=\"form-label\">Brand</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Brand\" v-model=\"brand\" required>\r\n      </div>\r\n      \r\n            \r\n      <div class=\"mb-3\">\r\n        <label for=\"Model\" class=\"form-label\">Model</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Model\" v-model=\"model\" required>\r\n      </div>\r\n\r\n            \r\n      <div class=\"mb-3\">\r\n        <label for=\"Quantity\" class=\"form-label\">Quantity</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Quantity\" v-model=\"quantity\" required>\r\n      </div>\r\n\r\n      <div class=\"mb-3\">\r\n        <label for=\"partsImage\" class=\"form-label\">Image</label>\r\n        <input type=\"file\" id=\"partsImage\" class=\"form-control\" @change=\"handleImageUpload\" required>\r\n      </div>\r\n\r\n            \r\n      <div class=\"mb-3\">\r\n        <label for=\"Price\" class=\"form-label\">Price</label>\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Price\" v-model=\"price\" required>\r\n      </div>\r\n      <div style=\"display: flex; justify-content: space-between;\">\r\n  <button v-if=\"isEditing\" type=\"button\" @click=\"cancelEdit\" class=\"btn btn-secondary\">Cancel</button>\r\n  <button v-if=\"isEditing\" type=\"submit\" @click.prevent=\"updateItem\" class=\"btn btn-danger\" style=\"margin-right: 150px;\">Update</button>\r\n  <button v-else type=\"submit\" @click.prevent=\"save\" class=\"btn btn-success\">Save</button>\r\n</div>\r\n\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      description: '',\r\n      brand: '',\r\n      model: '',\r\n      quantity: '',\r\n      partsImage: null,\r\n      price: '',\r\n      itemId: null,\r\n      sid: '',\r\n    };\r\n  },\r\n  // methods: {\r\n  //   handleImageChange(event) {\r\n  //     this.image = event.target.files[0];\r\n  //   },\r\n    \r\n  //   async save() {\r\n  //   try {\r\n  //       const formData = this.createFormData();\r\n\r\n  //       // Save operation\r\n  //       const response = await axios.post('save', formData, {\r\n  //           headers: {\r\n  //               'Content-Type': 'multipart/form-data',\r\n  //           },\r\n  //       });\r\n\r\n  //       console.log(response.data);\r\n\r\n  //       // Remove the current item from the table\r\n  //       if (this.itemId) {\r\n  //           this.info = this.info.filter(item => item.id !== this.itemId);\r\n  //       }\r\n\r\n  //       // Reset itemId after saving changes\r\n  //       this.itemId = null;\r\n\r\n  //       // Reset the form fields\r\n  //       this.resetForm();\r\n  //       this.isEditing = false;\r\n\r\n  //       // Emit an event to notify the parent component about the data update\r\n  //       this.$emit('data-saved');\r\n\r\n  //       // ... handle other responses or actions as needed\r\n  //   } catch (error) {\r\n  //       console.error(error);\r\n  //   }\r\n  \r\n\r\n  methods: {\r\n    async save() {\r\n          try {\r\n    // Generate a unique image name\r\n\r\n\r\n    // Create FormData object\r\n    const formData = new FormData();\r\n    formData.append('name', this.name);\r\n    formData.append('description', this.description);\r\n    formData.append('brand', this.brand);\r\n    formData.append('model', this.model);\r\n    formData.append('quantity', this.quantity);\r\n    formData.append('image', this.partsImage, this.partsImage.name);\r\n    formData.append('price', this.price);\r\n\r\n\r\n    // Save the room data to the database\r\n    const room = await axios.post(\"save\", formData);\r\n\r\n    console.log(\"Room saved successfully:\", room);\r\n\r\n    // Clear the form after successful submission\r\n    this.name = \"\";\r\n    this.description = \"\";\r\n    this.brand = \"\";\r\n    this.model = \"\";\r\n    this.quantity = \"\";\r\n    this.partsImage = null;\r\n    this.price = \"\";\r\n\r\n    // Refresh the data in the admin view\r\n    // this.$emit(\"refreshData\");\r\n  } catch (error) {\r\n    console.error(\"Error saving room:\", error);\r\n    // You can display an error message to the user\r\n  }\r\n\r\n},\r\n\r\n  handleImageUpload(event) {\r\n      this.partsImage = event.target.files[0];\r\n  },\r\n  getBase64Image(file) {\r\n      return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result.split(',')[1]);\r\n      reader.onerror = (error) => reject(error);\r\n      reader.readAsDataURL(file);\r\n    });\r\n  },\r\n\r\n\r\nasync updateItem() {\r\n    try {\r\n      // console.log(this.itemId);\r\n        const formData = this.createFormData();\r\n        console.log(formData);\r\n        // Update operation\r\n        const response = await axios.post(`updateItem/${this.sid}`,{\r\n          'name': this.name,\r\n          'description': this.description,\r\n          'brand': this.brand,\r\n          'model': this.model,\r\n          'quantity': this.quantity,\r\n          'image': this.image,\r\n          'price': this.price,\r\n        },\r\n        {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n\r\n        console.log(response.data);\r\n\r\n        // Reset the form fields\r\n        this.resetForm();\r\n        this.isEditing = false;\r\n\r\n        // Emit an event to notify the parent component about the data update\r\n        this.$emit('data-save');\r\n\r\n        // ... handle other responses or actions as needed\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n},\r\n\r\ncancelEdit() {\r\n      this.resetForm();\r\n      this.isEditing = false;\r\n    },\r\n\r\n\r\n    editItem(info) {\r\n      // Clear the form fields and reset editing status\r\n      this.resetForm();\r\n      this.isEditing = false;\r\n    },\r\n    createFormData() {\r\n      const formData = new FormData();\r\n      // formData.append('id', this.id);\r\n      formData.append('name', this.name);\r\n      formData.append('description', this.description);\r\n      formData.append('brand', this.brand);\r\n      formData.append('model', this.model);\r\n      formData.append('quantity', this.quantity);\r\n      formData.append('image', this.image);\r\n      formData.append('price', this.price);\r\n\r\n      return formData;\r\n    },\r\n    resetForm() {\r\n      // Reset your form fields\r\n      this.name = '';\r\n      this.description = '';\r\n      this.brand = '';\r\n      this.model = '';\r\n      this.quantity = '';\r\n      this.image = null;\r\n      this.price = '';\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n  <style scoped>\r\n  .bg-dark-blue {\r\n  background-color: rgb(8, 119, 188)}\r\n  .sidebar {\r\n    height: 100%;\r\n  }\r\n  \r\n  @media (min-width: 768px) {\r\n    /* Adjust the height for larger screens */\r\n    .sidebar {\r\n      height: 80vh;\r\n    }\r\n  }\r\n  .sidebar h3 {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .sidebar label {\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .sidebar input {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .sidebar button {\r\n    margin-top: 10px;\r\n  }\r\n  .sidebar-container {\r\n  height: 0vh; /* 100% of the viewport height */\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.sidebar {\r\n  height: 100%; /* Occupy full height of the container */\r\n}\r\n  \r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}