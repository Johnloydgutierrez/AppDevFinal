{"ast":null,"code":"import insert from '@/components/insert.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    insert\n  },\n  data() {\n    return {\n      ebikeparts: [] // Corrected property name\n    };\n  },\n\n  created() {\n    this.getInfo();\n  },\n  methods: {\n    async getInfo() {\n      try {\n        const inf = await axios.get('/ebikepartsGetData');\n        this.ebikeparts = inf.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    editItem(selectedInfo) {\n      // Access the form component using the ref\n      const formComponent = this.$refs.insertForm;\n\n      // Update the form fields with the selected item's data\n\n      formComponent.id = selectedInfo.ID;\n      formComponent.sid = selectedInfo.ID;\n      formComponent.name = selectedInfo.name;\n      formComponent.description = selectedInfo.description;\n      formComponent.brand = selectedInfo.brand;\n      formComponent.model = selectedInfo.model;\n      formComponent.quantity = selectedInfo.quantity;\n      formComponent.image = selectedInfo.image;\n      formComponent.price = selectedInfo.price;\n\n      // Store the selected item's ID for updating it later\n      formComponent.itemId = selectedInfo.id;\n      formComponent.isEditing = true;\n    },\n    async updateItem(editedItem) {\n      try {\n        // Make a PUT request to update the item in your database\n        await axios.put(`updateItem/${editedItem.id}`, editedItem);\n\n        // Update the local data with the edited item\n        const index = this.info.findIndex(item => item.id === editedItem.id);\n        this.$set(this.info, index, editedItem);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["insert","axios","components","data","ebikeparts","created","getInfo","methods","inf","get","error","console","editItem","selectedInfo","formComponent","$refs","insertForm","id","ID","sid","name","description","brand","model","quantity","image","price","itemId","isEditing","updateItem","editedItem","put","index","info","findIndex","item","$set"],"sources":["D:\\laragon\\www\\AppDevFinal\\src\\views\\inventory\\AddParts.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-black \">\r\n    <div class=\"container\">\r\n      <router-link to=\"/Admin\" class=\"navbar-brand bg-black\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" class=\"bi bi-arrow-left-square-fill\" viewBox=\"0 0 20 19\">\r\n  <path d=\"M16 14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12zm-4.5-6.5H5.707l2.147-2.146a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708-.708L5.707 8.5H11.5a.5.5 0 0 0 0-1z\"/>\r\n</svg>Back</router-link>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  <div class=\"floating-container\">\r\n      <div class=\"right-container\">\r\n        <insert ref=\"insertForm\" @data-saved=\"getInfo\" />\r\n      </div>\r\n      <div class=\"parts-container\">\r\n        <br>\r\n        <h2>E-Bike Parts Inventory</h2>\r\n      \r\n        <table border=\"1\" class=\"parts-table\">\r\n          <tr>\r\n\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th>Brand</th>\r\n            <th>Model</th>\r\n            <th>Quantity</th>\r\n            <th>Image</th>\r\n            <th>Price</th>\r\n            <th>action</th>         \r\n            <th style=\"display: none\">ID</th>\r\n            \r\n          </tr>\r\n          <tr v-for=\"info in ebikeparts\" :key=\"info.id\">\r\n            <td>{{ info.name }}</td>\r\n            <td>{{ info.description }}</td>\r\n            <td>{{ info.brand }}</td>\r\n            <td>{{ info.model }}</td>\r\n            <td>{{ info.quantity }}</td>\r\n            <td v-if=\"info.image\">\r\n                      <img\r\n                        :src=\"info.image\"\r\n                        style=\"max-width: 100%; max-height: 100%; width: 100px; height: auto;\"\r\n                        @error=\"handleImageError\"\r\n                      />\r\n                    </td>\r\n            <td>{{ info.price }}</td>\r\n            <td style=\"display: none\">{{ info.id }}</td>\r\n            <td>\r\n          <button @click=\"editItem(info)\" class=\"edit-btn\">Edit</button>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n  \r\n</template>\r\n<script>\r\nimport insert from '@/components/insert.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    insert,\r\n  },\r\n  data() {\r\n    return {\r\n    ebikeparts: [], // Corrected property name\r\n  };\r\n  },\r\n  created() {\r\n    this.getInfo();\r\n  },\r\n  methods: {\r\n    async getInfo() {\r\n      try {\r\n        const inf = await axios.get('/ebikepartsGetData');\r\n        this.ebikeparts = inf.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    editItem(selectedInfo) {\r\n      // Access the form component using the ref\r\n      const formComponent = this.$refs.insertForm;\r\n\r\n      // Update the form fields with the selected item's data\r\n      \r\n      formComponent.id = selectedInfo.ID;\r\n      formComponent.sid = selectedInfo.ID;\r\n      formComponent.name = selectedInfo.name;\r\n      formComponent.description = selectedInfo.description;\r\n      formComponent.brand = selectedInfo.brand;\r\n      formComponent.model = selectedInfo.model;\r\n      formComponent.quantity = selectedInfo.quantity;\r\n      formComponent.image = selectedInfo.image;\r\n      formComponent.price = selectedInfo.price;\r\n\r\n      // Store the selected item's ID for updating it later\r\n      formComponent.itemId = selectedInfo.id;\r\n      formComponent.isEditing = true;\r\n    },\r\n    async updateItem(editedItem) {\r\n      try {\r\n        // Make a PUT request to update the item in your database\r\n        await axios.put(`updateItem/${editedItem.id}`, editedItem);\r\n\r\n        // Update the local data with the edited item\r\n        const index = this.info.findIndex(item => item.id === editedItem.id);\r\n        this.$set(this.info, index, editedItem);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n@media (max-width: 767px) {\r\n  .navbar-brand {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .navbar-toggler {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .navbar-nav {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .floating-container {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .right-container,\r\n  .parts-container {\r\n    width: 100%;\r\n    padding: 10px;\r\n  }\r\n\r\n  .generate {\r\n    width: 100%;\r\n  }\r\n\r\n  .table {\r\n    overflow-x: auto;\r\n  }\r\n\r\n  .btn-warning {\r\n    width: 100%;\r\n  }\r\n}\r\n.floating-container  {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin: 0;\r\n  background-color: darkcyan;\r\n}\r\n\r\n.right-container {\r\n  max-width: 500px;\r\n}\r\n\r\n.parts-container , h2{\r\n  flex-grow: 1;\r\n  padding-left: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.parts-table {\r\n  width: 97%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n  font-family: 'Helvetica', Arial, sans-serif;\r\n  font-weight: 100;\r\n  border-collapse: collapse;\r\n  overflow: hidden;\r\n  box-shadow: 0 0 20px #0000001a;\r\n}\r\n\r\n.parts-table th,\r\n.parts-table td {\r\n  padding: 15px;\r\n  color: #000000;\r\n  border: 1px solid #01030f;\r\n  background-color: #ededf0; /* Add border styling */\r\n}\r\n\r\n.parts-table th {\r\n  background-color: #525770;\r\n  color: #fff;\r\n}\r\n\r\n.parts-table tr:hover {\r\n  background-color: #ffffff4d;\r\n}\r\n\r\n.parts-table tbody td {\r\n  position: relative;\r\n}\r\n\r\n.parts-table tbody tr:hover::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  background-color: #ffffff33;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  z-index: -1;\r\n}\r\n\r\n.right-container h2 {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n/* Added styling for the delete button */\r\n.parts-table button {\r\n  background-color: rgb(99, 99, 131);\r\n  color: #ffffff;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  align-items: center;\r\n}\r\n\r\n.parts-table button:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>\r\n\r\n\r\n"],"mappings":"AA+DA,OAAOA,MAAK,MAAO,yBAAyB;AAC5C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACPC,UAAU,EAAE,EAAE,CAAE;IAClB,CAAC;EACD,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,CAAC;EAChB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAME,GAAE,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,oBAAoB,CAAC;QACjD,IAAI,CAACL,UAAS,GAAII,GAAG,CAACL,IAAI;MAC5B,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDE,QAAQA,CAACC,YAAY,EAAE;MACrB;MACA,MAAMC,aAAY,GAAI,IAAI,CAACC,KAAK,CAACC,UAAU;;MAE3C;;MAEAF,aAAa,CAACG,EAAC,GAAIJ,YAAY,CAACK,EAAE;MAClCJ,aAAa,CAACK,GAAE,GAAIN,YAAY,CAACK,EAAE;MACnCJ,aAAa,CAACM,IAAG,GAAIP,YAAY,CAACO,IAAI;MACtCN,aAAa,CAACO,WAAU,GAAIR,YAAY,CAACQ,WAAW;MACpDP,aAAa,CAACQ,KAAI,GAAIT,YAAY,CAACS,KAAK;MACxCR,aAAa,CAACS,KAAI,GAAIV,YAAY,CAACU,KAAK;MACxCT,aAAa,CAACU,QAAO,GAAIX,YAAY,CAACW,QAAQ;MAC9CV,aAAa,CAACW,KAAI,GAAIZ,YAAY,CAACY,KAAK;MACxCX,aAAa,CAACY,KAAI,GAAIb,YAAY,CAACa,KAAK;;MAExC;MACAZ,aAAa,CAACa,MAAK,GAAId,YAAY,CAACI,EAAE;MACtCH,aAAa,CAACc,SAAQ,GAAI,IAAI;IAChC,CAAC;IACD,MAAMC,UAAUA,CAACC,UAAU,EAAE;MAC3B,IAAI;QACF;QACA,MAAM7B,KAAK,CAAC8B,GAAG,CAAE,cAAaD,UAAU,CAACb,EAAG,EAAC,EAAEa,UAAU,CAAC;;QAE1D;QACA,MAAME,KAAI,GAAI,IAAI,CAACC,IAAI,CAACC,SAAS,CAACC,IAAG,IAAKA,IAAI,CAAClB,EAAC,KAAMa,UAAU,CAACb,EAAE,CAAC;QACpE,IAAI,CAACmB,IAAI,CAAC,IAAI,CAACH,IAAI,EAAED,KAAK,EAAEF,UAAU,CAAC;MACzC,EAAE,OAAOpB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}